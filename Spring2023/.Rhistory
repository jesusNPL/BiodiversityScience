fatten = 7, linewidth = 2.5, alpha = 0.7) +
#coord_cartesian(ylim = c(-1, 1.5)) +
geom_hline(yintercept = 0, size = 1, colour = "darkgray", linetype = "dashed") +
scale_colour_manual(values = c("Positive" = barCOLS[2],
"Negative" = barCOLS[1],
"Null" = barCOLS[3])
) +
coord_flip() +
labs(x = NULL,
y = "Family-level effect") +
theme_nice() +
theme(
legend.position = "none",
axis.text.x = element_text(vjust = 0.5, hjust = 0.7),
axis.text.y = element_text(face = "italic"),
axis.title = element_text(size = 18),
axis.text = element_text(size = 15, colour = "black")
)
fams[, , "Intercept"] %>%
data.frame() %>%
rownames_to_column() %>%
rename(family = rowname) %>%
as_tibble() %>%
#mutate(family2 = gsub("_", " ", family)) %>%
mutate(direction = ifelse(Q11 > 0, "Positive",
ifelse(Q89 < 0, "Negative", "Null"))) %>%
arrange(family) %>%
ggplot(aes(x = family, y = Estimate, color = direction)) +
geom_pointrange(aes(ymin = Q5, ymax = Q95),
fatten = 7, linewidth = 1.5, alpha = 0.4) +
geom_pointrange(aes(ymin = Q11, ymax = Q89),
fatten = 10, linewidth = 2.5, alpha = 0.7) +
#coord_cartesian(ylim = c(-1, 1.5)) +
geom_hline(yintercept = 0, size = 1, colour = "darkgray", linetype = "dashed") +
scale_colour_manual(values = c("Positive" = barCOLS[2],
"Negative" = barCOLS[1],
"Null" = barCOLS[3])
) +
coord_flip() +
labs(x = NULL,
y = "Family-level effect") +
theme_nice() +
theme(
legend.position = "none",
axis.text.x = element_text(vjust = 0.5, hjust = 0.7),
axis.text.y = element_text(face = "italic"),
axis.title = element_text(size = 18),
axis.text = element_text(size = 15, colour = "black")
)
bayes_R2(fit3)
load("~/Dropbox/Collaborations/Axel_Jesus/Spec_Dispersal/output/fits.RData")
fit_All_simple
fit_All_within
summary(fit_All_within)
setwd("Documents/GitHub/BiodiversityScience/Spring2023/")
#| eval: false
library(tidyverse)
library(lubridate)
library(coronavirus)
library(PrettyCols)
library(scales)
library(deSolve)
#| eval: false
data("coronavirus")
glimpse(coronavirus)
#| eval: false
data("coronavirus")
glimpse(coronavirus)
#| eval: false
corona <- refresh_coronavirus_jhu()
corona %>%
head(10)
#| eval: false
# Get top confirmed cases by country
corona %>%
filter(data_type == "cases_new") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(location), x = total)) +
geom_bar(stat = "identity")
#| eval: false
# Aux function for visualization
theme_nice <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 12))
}
# Get top confirmed cases by country
corona %>%
filter(data_type == "cases_new") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(location), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with more reported cases") +
theme_nice()
#| eval: false
corona_us <- corona %>%
filter(location == "US") %>%
arrange(desc(date)) # sort the data according dates
# Plot recoveries over time US
corona_us %>%
filter(data_type == "recovered_new") %>%
ggplot(aes(x = as.POSIXct(date), y = value)) +
geom_point(color = "gray") +
labs(x = NULL, y = "COVID-19 new recoveries") +
geom_line(mapping = aes(x = as.POSIXct(date)), linewidth = 2,
colour = alpha(PrettyCols::prettycols("Purples")[4], 0.3)) +
geom_smooth(colour = PrettyCols::prettycols("Purples")[1], linewidth = 2) +
scale_y_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
scale_x_datetime(date_breaks = "2 month", labels = scales::label_date_short()) +
theme_nice()
# Plot recoveries over time US
corona_us %>%
filter(data_type == "recovered_new") %>%
ggplot(aes(x = as.POSIXct(date), y = abs(value))) +
geom_point(color = "gray") +
labs(x = NULL, y = "COVID-19 new recoveries") +
geom_line(mapping = aes(x = as.POSIXct(date)), linewidth = 2,
colour = alpha(PrettyCols::prettycols("Purples")[4], 0.3)) +
geom_smooth(colour = PrettyCols::prettycols("Purples")[1], linewidth = 2) +
scale_y_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
scale_x_datetime(date_breaks = "2 month", labels = scales::label_date_short()) +
theme_nice()
corona_us %>%
filter(data_type == "recovered_new")
corona_us %>%
filter(data_type == "recovered_new") %>%
view
# Plot recoveries over time US
corona_us %>%
filter(data_type == "recovered_new") %>%
filter(value < 0)
# Plot recoveries over time US
corona_us %>%
filter(data_type == "recovered_new") %>%
filter(value < 0) %>%
ggplot(aes(x = as.POSIXct(date), y = value)) +
geom_point(color = "gray") +
labs(x = NULL, y = "COVID-19 new recoveries") +
geom_line(mapping = aes(x = as.POSIXct(date)), linewidth = 2,
colour = alpha(PrettyCols::prettycols("Purples")[4], 0.3)) +
geom_smooth(colour = PrettyCols::prettycols("Purples")[1], linewidth = 2) +
scale_y_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
scale_x_datetime(date_breaks = "2 month", labels = scales::label_date_short()) +
theme_nice()
# Plot recoveries over time US
corona_us %>%
filter(data_type == "recovered_new") %>%
filter(value > 0) %>%
ggplot(aes(x = as.POSIXct(date), y = value)) +
geom_point(color = "gray") +
labs(x = NULL, y = "COVID-19 new recoveries") +
geom_line(mapping = aes(x = as.POSIXct(date)), linewidth = 2,
colour = alpha(PrettyCols::prettycols("Purples")[4], 0.3)) +
geom_smooth(colour = PrettyCols::prettycols("Purples")[1], linewidth = 2) +
scale_y_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
scale_x_datetime(date_breaks = "2 month", labels = scales::label_date_short()) +
theme_nice()
# Get fewest recovered cases by country
corona %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
# Get fewest recovered cases by country
corona %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
#arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
corona %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
#arrange(-total) %>%
tail(20)
corona
#| eval: false
corona <- refresh_coronavirus_jhu()
corona %>%
head(10)
corona
corona %>%
filter(data_type == "recovered_new" & location_type == "country" )
# Get fewest recovered cases by country
corona %>%
filter(data_type == "recovered_new" & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
View(corona)
corona %>%
filter(data_type == "recovered_new" & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location)
corona %>%
filter(data_type == "recovered_new" & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
# Get fewest recovered cases by country
corona %>%
filter(data_type == "recovered_new" & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>% view()
corona %>%
filter(data_type == "recovered_new")
corona %>%
filter(data_type == "recovered_new") %>% # & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>% view()
View(corona)
corona %>%
filter(data_type == "recovered_new") %>% view()#
head(corona)
glimpse(corona)
corona %>%
filter(data_type == "recovered_new") %>% # & location_type == "country" ) %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
corona %>%
filter(data_type == "recovered_new" | location_type == "country" )
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" | location_type == "country" )
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country" )
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country")
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country") %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location)
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country") %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country") %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
%>% view()
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new" & location_type == "country") %>%
#& location != "MS Zaandam" & location !="Antarctica"
#& location != "Winter Olympics 2022" & location != "Diamond Princess"
#& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
view()
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020")
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location)
corona %>%
as_tibble() %>%
filter(data_type == "recovered_new"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
unique(corona$location)
corona %>%
as_tibble() %>%
filter(location == "US")
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new")
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new") %>% view()
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new") %>%
summarize(sum = value)
# Get fewest recovered cases by country
corona %>%
as_tibble()
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new") %>%
group_by(location) %>%
summarize(sum = value)
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new") %>%
group_by(location) %>%
summarize(suma = sum(value))
corona %>%
as_tibble() %>%
filter(location == "US") %>%
filter(data_type == "recovered_new") %>%
filter(value > 0) %>%
group_by(location) %>%
summarize(suma = sum(value))
# Get fewest recovered cases by country
corona %>%
as.tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country") %>%
# & location != "MS Zaandam" & location !="Antarctica"
# & location != "Winter Olympics 2022" & location != "Diamond Princess"
# & location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
#arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value))
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>% view()
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>% view()
#arrange(-total) %>%
tail(20)
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
#arrange(-total) %>%
tail(20)
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20)
# Get fewest recovered cases by country
corona %>%
as_tibble() %>%
filter(value > 0) %>%
filter(data_type == "recovered_new" & location_type == "country"
& location != "MS Zaandam" & location !="Antarctica"
& location != "Winter Olympics 2022" & location != "Diamond Princess"
& location != "Summer Olympics 2020") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
tail(20) %>%
ggplot(aes(y = reorder(as.factor(location), +total), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with less recovered cases") +
theme_nice()
corona_us %>%
filter(data_type == "recovered_new") %>%
filter(value < 0)
