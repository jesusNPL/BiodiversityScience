theme_void()
dev.off()
gc()
?get_elev_raster
?giscoR::gisco_get_countries
?get_elev_point
load("~/Dropbox/FURNARIIDES/Furnariides_phylogeny/ClaDS/ClaDS_furnariides_new.RData")
library(RPANDA)
?ClaDS0_example
CladsOutput$tree
MAPS = getMAPS_ClaDS0(CladsOutput$tree,
CladsOutput$chains,
thin = 10)
data(ClaDS0_example)
ClaDS0_example$speciation_rates
plot_ClaDS0_chains(ClaDS0_example$Cl0_chains, param = 1:4)
ClaDS0_example$speciation_rates
plot_ClaDS0_chains(ClaDS0_example$Cl0_chains, param = 1:4)
plot_ClaDS0_chains(ClaDS0_example$Cl0_chains, param = 1:4)
dev.off()
plot_ClaDS0_chains(ClaDS0_example$Cl0_chains, param = 1:4)
plot_ClaDS0_chains(ClaDS0_example$Cl0_chains, param = 1:2)
plot_ClaDS0_chains(CladsOutput$chains, param = 1:2)
plot_ClaDS0_chains(CladsOutput$chains[[1]], param = 1:2)
plot_ClaDS0_chains(CladsOutput$chains[[1]][[1]], param = 1:2)
# extract the Maximum A Posteriori for each of the parameters
MAPS = getMAPS_ClaDS0(ClaDS0_example$tree,
ClaDS0_example$Cl0_chains,
thin = 10)
MAPS
# plot the simulated (on the left) and inferred speciation rates (on the right)
# on the same color scale
plot_ClaDS_phylo(ClaDS0_example$tree,
ClaDS0_example$speciation_rates,
MAPS[-(1:3)])
ClaDS0_example$Cl0_chains
head(ClaDS0_example$Cl0_chains)
class(ClaDS0_example$Cl0_chains)
class(ClaDS0_example$Cl0_chains[[1]])
(CladsOutput$chains[[1]])
class(CladsOutput$chains[[1]])
class(CladsOutput$chains[[1]][[1]])
class(CladsOutput$chains[[1]][[100]])
CladsOutput$chains[[1]][[100]]
hist(CladsOutput$chains[[1]][[100]])
hist(CladsOutput$chains[[2]][[100]])
hist(CladsOutput$chains[[3]][[100]])
hist(CladsOutput$chains[[4]][[100]])
class(ClaDS0_example$Cl0_chains[[2]])
class(ClaDS0_example$Cl0_chains[[3]])
class(ClaDS0_example$Cl0_chains[[4]])
class(ClaDS0_example$Cl0_chains[[3]])
ClaDS0_example$Cl0_chains[[3]]
install.packages("itsdm")
library(itsdm, quietly = TRUE)
library(tidyverse)
library(stars)
library(rnaturalearth)
# Bioclimatic variables
data("mainland_africa")
force(mainland_africa)
bios <- worldclim2(var = 'bio',
bry = mainland_africa,
path = "Donwloads",
nm_mark = 'africa') %>%
st_normalize()
?worldclim2
bios <- worldclim2(var = 'bio',
bry = mainland_africa,
path = "Downloads/",
nm_mark = 'africa') %>%
st_normalize()
bios <- worldclim2(var = 'bio',
bry = mainland_africa,
#path = "Downloads/",
nm_mark = 'africa') %>%
st_normalize()
install.packages("terra", type = "source")
install.packages("terra", type = "source")
library(ape)
setwd("Documents/GitHub/BiodiversityScience/Spring2023/")
phy <- read.nexus("Lab_1/Data/furnariiMCC.nex")
trt <- read.csv("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET1_BirdLife.csv")
View(trt)
head(trt)
trt$Sciname <- gsub(" ", "_", trt$Species1)
trt$Sciname
trt[trt$Sciname %in% phy$tip.label, ]
x <- trt[trt$Sciname %in% phy$tip.label, ]
View(x)
library(tidyverse)
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET1_Birdlife.xlsx",
sheet = "AVONET3_BirdTree")
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET1_Birdlife.xlsx",
sheet = "AVONET1_BirdLife")
View(trt)
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET1_Birdlife.xlsx",
sheet = "AVONET1_BirdLife")
trt
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET3_BirdTree.xlsx,
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET3_BirdTree.xlsx",
sheet = "AVONET3_BirdTree")
View(trt)
trt <- trt %>%
mutate(Sciname = gsub(" ", "_", Species3))
trt <- readxl::read_xlsx("../../../../../BirdTRAITS/AVONET_source/ELEData/TraitData/AVONET3_BirdTree.xlsx",
sheet = "AVONET3_BirdTree")
trt <- trt %>%
mutate(Sciname = gsub(" ", "_", Species3)) %>%
select(Sciname, everything())
x <- trt[trt$Sciname %in% phy$tip.label, ]
View(x)
write_csv(x, file = "Lab_1/Data/furnariides_tratis.csv")
phy <- read.nexus("Lab_1/Data/furnariides_tree.nex")
phy
x
library(tidyverse)
library(ape)
library(geiger)
library(geiger)
library(nlme)
library(phytools)
library(rr2)
furnaData <- read_csv("Data/furnariides_traits.csv")
View(furnaData)
furnaTree <- read_tree("Data/furnariides_tree.nex")
furnaTree <- read.nexus("Data/furnariides_tree.nex")
furnaTree
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv")
furnaData
View(furnaData)
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
furnaTree
glimpse(furnaData)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv")
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
glimpse(furnaData)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
packages <- c("ape", "geiger", "nlme", "phytools", "rr2")
# Package vector names
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
library(tidyverse)
library(ape)
library(geiger)
library(nlme)
library(phytools)
library(rr2)
glimpse(furnaData)
plot(furnaTree)
plot.phylo(furnaTree, no.margin = TRUE, cex = 0.5)
furnaTree
str(furnaTree)
furnaTree$tip.label
furnaTree$Nnode
furnaTree$edge
plot.phylo(furnaTree, type = "fan", no.margin = TRUE, cex = 0.7, label.offset = 0.1)
plot.phylo(furnaTree, type = "fan", no.margin = TRUE, cex = 0.7, label.offset = 0.1)
nodelabels(cex = 0.5)
tiplabels(cex = 0.5)
furnaData %>%
head() # this will show you the first few rows of your data matrix and its header
furnaData %>%
dimnames() # this will show you the row and column headers for your matrix
furnaData %>%
View() # this will let you visualize the entire matrix
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv", rownames = 1)
?read_csv
View(furnaData)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname")
View(furnaData)
furnaData %>%
dimnames() # this will show you the row and column headers for your matrix
furnaData %>%
select(Mass)
furnaData[, "Mass"]
as.numeric(mass)
mass <- furnaData %>%
select(Mass)
as.numeric(mass)
as.numeric(mass$Mass)
mass <- furnaData[, "Mass"]
names(mass) <- rownames(furnaData)
mass
brownianModel <- fitContinuous(furnaTree, mass)
brownianModel # this will show you the fit statistics and parameter values
contMap(furnaTree, mass, fsize = 0.5, lwd = 3)
hwi <- furnData[, "Hand-Wing.Index"]
hwi <- furnaData[, "Hand-Wing.Index"]
names(hwi) <- rownames(furnaData)
hwi
furnaData
furnaData
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = Mass)) +
geom_point()
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Mass))) +
geom_point()
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Mass))) +
geom_point(alpha = 0.5, color = "darkgray")
furnaData %>%
ggplot(aes(x = log(Mass), y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray") +
plot(host, awe, xlab = "Hostility", ylab = "Awesomeness")
furnaData %>%
ggplot(aes(x = log(Mass), y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray")
furnaData %>%
ggplot(aes(x = log(Mass), y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Body Mass)", y = "Hand-Wing Index")
View(furnaData)
furnaData %>%
ggplot(aes(x = log(Range.Size), y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Body Mass)", y = "Hand-Wing Index")
furnaData %>%
ggplot(aes(x = Range.Size, y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Body Mass)", y = "Hand-Wing Index")
furnaData %>%
ggplot(aes(x = Range.Size, y = `Hand-Wing.Index`)) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Body Mass)", y = "Hand-Wing Index")
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = Range.Size)) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Body Mass)", y = "Hand-Wing Index")
furnaData %>%
drop_na() %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Body Mass)")
furnaData %>%
#drop_na() %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Body Mass)")
plot(log(furnaData$Range.Size))
hist(log(furnaData$Range.Size))
hist(furnaData$Range.Size)
hist(furnaData$`Hand-Wing.Index`)
rangeSize <- furnaData[, "Range.Size"]
names(rangeSize) <- rownames(furnaData)
rangeSize
rangeSize <- log(furnaData[, "Range.Size"])
names(rangeSize) <- rownames(furnaData)
rangeSize
hist(rangeSize)
brownianModel <- fitContinuous(furnaTree, rangeSize)
brownianModel # this will show you the fit statistics and parameter values
hwi <- log(furnaData[, "Hand-Wing.Index"])
names(hwi) <- rownames(furnaData)
hist(hwi)
hwi <- furnaData[, "Hand-Wing.Index"]
names(hwi) <- rownames(furnaData)
hist(hwi)
brownianModel <- fitContinuous(furnaTree, hwi)
brownianModel # this will show you the fit statistics and parameter values
contMap(furnaTree, hwi, fsize = 0.5, lwd = 3)
contMap(furnaTree, hwi, fsize = 0.5, lwd = 3)
rangeSize <- furnaData[, "Range.Size"]
names(rangeSize) <- rownames(furnaData)
rangeSize
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
lm_hwi_rangesize <- lm(log(rangeSize) ~ hwi)
summary(lm_hwi_rangesize)
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
stat_smooth(method = "lm")
furnaData %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm")
pglsModel <- gls(log(rangeSize) ~ hwi,
correlation = corBrownian(phy = furnaTree, form=~names(rangeSize)),
method = "ML")
names(rangeSize)
pglsModel <- gls(log(rangeSize) ~ hwi,
correlation = corBrownian(phy = furnaTree, form=~names(rangeSize)),
method = "ML")
furnaData %>%
drop_na(rangeSize) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm")
furnaData %>%
drop_na(rangeSize)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm")
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
?geiger::name.check
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
glimpse(furnaData)
name.check(phy = furnaTree, data = furnaData)
sort(furnaTree$tip.label)
tmp <- name.check(phy = furnaTree, data = furnaData)
tmp
furnaTree <- drop.tip(phy = furnaTree, tip = tmp$tree_not_data)
furnaTree
name.check(phy = furnaTree, data = furnaData)
hwi <- furnaData[, "Hand-Wing.Index"]
names(hwi) <- rownames(furnaData)
hist(hwi)
brownianModel <- fitContinuous(furnaTree, hwi)
brownianModel # this will show you the fit statistics and parameter values
contMap(furnaTree, hwi, fsize = 0.5, lwd = 3)
?contMap
rangeSize <- furnaData[, "Range.Size"]
names(rangeSize) <- rownames(furnaData)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
lm_hwi_rangesize <- lm(log(rangeSize) ~ hwi)
summary(lm_hwi_rangesize)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm")
pglsModel <- gls(log(rangeSize) ~ hwi,
correlation = corBrownian(phy = furnaTree, form=~names(rangeSize)),
method = "ML")
summary(pglsModel)
coef(pglsModel)
R2(pglsModel)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2])
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", size = 2)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 2)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
brownianModel <- fitContinuous(anoleTree, awe)
brownianModel <- fitContinuous(furnaTree, hwi)
OUModel <- fitContinuous(furnaTree, hwi, model = "OU")
EBModel <- fitContinuous(furnaTree, hwi, model = "EB")
brownianModel
OUModel
EBModel
aicw(c(brownianModel$opt$aicc, OUModel$opt$aicc, EBModel$opt$aicc))
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
#geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
#geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
rshwi.sum <- summary(lm_hwi_rangesize)
rshwi.sum
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for the uncorrected linear model
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for the uncorrected linear model
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
#for the uncorrected linear model
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for Brownian Motion, the 95% CI
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
View(furnaData)
habitat <- furnaData$Habitat
names(habitat) <- rownames(furnaData)
habitat
habitat_anc <- make.simmap(furnaTree, habitat, model = "SYM", nsim = 100)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
tmp <- name.check(phy = furnaTree, data = furnaData)
tmp
furnaTree <- drop.tip(phy = furnaTree, tip = tmp$tree_not_data)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
tmp <- name.check(phy = furnaTree, data = furnaData)
tmp
furnaTree <- drop.tip(phy = furnaTree, tip = tmp$tree_not_data)
name.check(phy = furnaTree, data = furnaData)
habitat <- furnaData$Habitat
names(habitat) <- rownames(furnaData)
habitat_anc <- make.simmap(furnaTree, habitat, model = "SYM", nsim = 100)
habitat
furnaData %>%
select(Habitat)
unique(furnaData$Habitat)
View(furnaData)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
glimpse(furnaData)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
glimpse(furnaData)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
glimpse(furnaData)
tmp <- name.check(phy = furnaTree, data = furnaData)
tmp
furnaTree <- drop.tip(phy = furnaTree, tip = tmp$tree_not_data)
name.check(phy = furnaTree, data = furnaData)
furnaData %>%
mutate(habitat_recode = recode(Habitat, )) %>%
habitat <- furnaData$Habitat
habitat <- furnaData$Habitat
names(habitat) <- rownames(furnaData)
habitat_anc <- make.simmap(furnaTree, habitat, model = "SYM", nsim = 100)
library(tidyverse)
library(ape)
library(geiger)
library(nlme)
library(phytools)
library(rr2)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2023/Lab_1/Data/furnariides_tree.nex")
glimpse(furnaData)
