resHARV_001_df_long
resHARV_001_df_long <- resHARV_001_df %>%
select(!c(plotID, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude)) %>%
reshape2::melt(id.vars = "scientificName",
variable.name = "Wavelength",
value.name = "Reflectance")
resHARV_001_df_long
resHARV_001_df_long <- resHARV_001_df %>%
select(!c(plotID, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude)) %>%
reshape2::melt(id.vars = "scientificName",
variable.name = "Wavelength",
value.name = "Reflectance")
resHARV_001_df_long <- resHARV_001_df_long %>%
mutate(Wavelength2 = Wavelength) %>%
separate(Wavelength2, into = c("bands", "wl"), sep = "_") %>%
mutate(WL = as.numeric(gsub("[nm]", "", wl))) %>%
filter(
!between(WL, 1340, 1445),
!between(WL, 1790, 1955)
)
resHARV_001_df_long %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance, fill = "scientificName")) +
geom_line() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance, fill = "scientificName")) +
geom_point() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_point(fill = "scientificName") +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_point(color = "scientificName") +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_line() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
filter(
!between(WL, 1340, 1445),
!between(WL, 1790, 1955)
) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_line() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
filter(
!between(WL, 1340, 1445),
!between(WL, 1790, 1955)
) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance, group = "scientificName", color = "scientificName")) +
geom_line() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
filter(
!between(WL, 1340, 1445),
!between(WL, 1790, 1955)
) %>%
drop_na() %>%
filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance, color = "darkgray")) +
geom_line() +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
filter(
!between(WL, 1340, 1445),
!between(WL, 1790, 1955)
) %>%
drop_na() %>%
filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_line() +
scale_color_viridis_d(option = "C") +
xlab("Wavelength (nm)") +
ylab("Reflectance")
library(geoNEON)
# Calculate the more precise location for each NEON plot in the HARV site
vegmap <- "Data/NEON/filesToStack10098/stackedFiles/vst_mappingandtagging.csv" %>%
read_csv() %>%
mutate(year = substr(date, 1, 4)) %>%
filter(year == '2019') %>%
def.calc.geo.os("vst_mappingandtagging")
library(tidyverse)
# Calculate the more precise location for each NEON plot in the HARV site
vegmap <- "Data/NEON/filesToStack10098/stackedFiles/vst_mappingandtagging.csv" %>%
read_csv() %>%
mutate(year = substr(date, 1, 4)) %>%
filter(year == '2019') %>%
def.calc.geo.os("vst_mappingandtagging")
# Load individual tree coordinates
vegind <- read_csv("Data/NEON/filesToStack10098/stackedFiles/vst_apparentindividual.csv")
# Comnine the coordinates with three identification
veg <- right_join(vegind, vegmap,
by = c("individualID", "namedLocation", "domainID", "siteID", "plotID")) %>%
filter(!is.na(adjEasting), !is.na(adjNorthing), plantStatus == "Live")
harv_01_trees <- veg %>%
select(adjNorthing, adjEasting, scientificName, plotID,
adjDecimalLatitude, adjDecimalLongitude) %>%
filter(plotID == "HARV_001")
library(rgdal)
harv_01_trees_spt <- SpatialPointsDataFrame(coords = harv_01_trees[, 2:1],
data = harv_01_trees,
proj4string = crs(ndvi_calc))
library(raster)
harv_01_trees_spt <- SpatialPointsDataFrame(coords = harv_01_trees[, 2:1],
data = harv_01_trees,
proj4string = crs(ndvi_calc))
ndvi_calc<- raster("Data/NEON/DP3.30006.001/HARV_plot_001_NDVI.tif")
harv_01_trees_spt <- SpatialPointsDataFrame(coords = harv_01_trees[, 2:1],
data = harv_01_trees,
proj4string = crs(ndvi_calc))
unique(harv_01_trees$scientificName)
length(harv_01_trees$scientificName)
library(neonhs)
hs_path_2019 <- list.files(
path = "Data/NEON/DP3.30006.001/neon-aop-products/2019/",
pattern = "reflectance.h5",
recursive = TRUE, full.names = TRUE
)
resHARV_001 <- neonhs::hs_extract_pts(filename = hs_path_2019, # path to the h5 file
pts = harv_01_trees_spt, # spatial points
bands = 1:426) # which bands
resHARV_001
resHARV_001_df <- as.data.frame(resHARV_001) %>%
bind_rows() %>%
as_tibble() %>%
select(!c("band418_2472nm", "band419_2477nm", "band420_2482nm", "band421_2487nm",
"band422_2492nm", "band423_2497nm", "band424_2502nm", "band425_2507nm",
"band426_2512nm", "adjEasting.1", "adjNorthing.1")) %>%
select(plotID, scientificName, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude, everything())
resHARV_001_df <- as.data.frame(resHARV_001) %>%
bind_rows() %>%
as_tibble() %>%
dplyr::select(!c("band418_2472nm", "band419_2477nm", "band420_2482nm", "band421_2487nm",
"band422_2492nm", "band423_2497nm", "band424_2502nm", "band425_2507nm",
"band426_2512nm", "adjEasting.1", "adjNorthing.1")) %>%
dplyr::select(plotID, scientificName, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude, everything())
resHARV_001_df
resHARV_001_df_long <- resHARV_001_df %>%
dplyr::select(!c(plotID, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude)) %>%
reshape2::melt(id.vars = "scientificName",
variable.name = "Wavelength",
value.name = "Reflectance")
resHARV_001_df_long <- resHARV_001_df_long %>%
mutate(Wavelength2 = Wavelength) %>%
separate(Wavelength2, into = c("bands", "wl"), sep = "_") %>%
mutate(WL = as.numeric(gsub("[nm]", "", wl)))
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
filter(scientificName == "Acer rubrum L.") %>%
ggplot(aes(x = WL, y = Reflectance)) +
geom_line() +
scale_color_viridis_d(option = "C") +
xlab("Wavelength (nm)") +
ylab("Reflectance")
# Use the melt() function to reshape the dataframe into a format that ggplot prefers
Pixel.melt <- melt(resHARV_001_df, id.vars = "WL", value.name = "Reflectance")
# Use the melt() function to reshape the dataframe into a format that ggplot prefers
Pixel.melt <- reshape2::melt(resHARV_001_df, id.vars = "WL", value.name = "Reflectance")
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_colour_manual(values = c("green2", "green4", "chartreuse3", "tan4", "blue3"),
labels = c("Forest1", "Forest2", "Forest3", "Soil", "Water"))
resHARV_001_df_long
str(resHARV_001_df_long)
resHARV_001_df_long <- resHARV_001_df %>%
dplyr::select(!c(plotID, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude)) %>%
reshape2::melt(id.vars = "scientificName",
variable.name = "Wavelength",
value.name = "Reflectance")
resHARV_001_df_long <- resHARV_001_df_long %>%
mutate(Wavelength2 = Wavelength) %>%
separate(Wavelength2, into = c("bands", "wl"), sep = "_") %>%
mutate(WL = as.numeric(gsub("[nm]", "", wl))) %>%
mutate(scientificName = as.factor(scientificName))
str(resHARV_001_df_long)
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_colour_manual(values = c("green2", "green4", "chartreuse3", "tan4", "blue3"),
labels = c("Forest1", "Forest2", "Forest3", "Soil", "Water"))
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_colour_manual(values = c("green2", "green4", "chartreuse3", "tan4", "blue3"),
labels = c("Forest1", "Forest2", "Forest3", "Soil", "Water"))
unique(resHARV_001_df_long$scientificName)
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_colour_manual(values = c("green2", "green4", "chartreuse3", "tan4"),
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra"))
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_colour_manual(values = c("#b35806", "#542788"), #c("green2", "green4", "chartreuse3", "tan4"),
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra"))
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "C")
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "C",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra"))
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "C",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
guides(colour = guide_legend(override.aes = list(size = 5))) +
```
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "C",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance")
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance")
clrs <- NatParksPalettes::natparks.pals("BryceCanyon")
theme_nice <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 12))
}
clrs
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
#| eval: false
resHARV_001_df_long <- resHARV_001_df %>%
dplyr::select(!c(plotID, adjNorthing, adjEasting, adjDecimalLongitude, adjDecimalLatitude)) %>%
reshape2::melt(id.vars = "scientificName",
variable.name = "Wavelength",
value.name = "Reflectance")
resHARV_001_df_long <- resHARV_001_df_long %>%
mutate(Wavelength2 = Wavelength) %>%
separate(Wavelength2, into = c("bands", "wl"), sep = "_") %>%
mutate(WL = as.numeric(gsub("[nm]", "", wl))) %>%
mutate(scientificName = as.factor(scientificName))
#| eval: false
theme_nice <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 12))
}
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
f <- "Data/NEON/DP3.30006.001/neon-aop-products/2019/FullSite/D01/2019_HARV_6/L3/Spectrometer/Reflectance/NEON_D01_HARV_DP3_725000_4700000_reflectance.h5"
library(rhdf5)
# grab Reflectance metadata (which contains absorption band limits)
reflMetadata <- h5readAttributes(f, "/HARV/Reflectance" )
reflMetadata
ab1 <- reflMetadata$Band_Window_1_Nanometers
ab2 <- reflMetadata$Band_Window_2_Nanometers
ab1
ab2
A
resHARV_001_df_long %>%
#filter(
# !between(WL, 1340, 1445),
#  !between(WL, 1790, 1955)
#) %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab1[1], xmax = ab1[2]),
color = "black", fill = "grey40", alpha = 0.8) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab2[1], xmax = ab2[2]),
color = "black", fill = "grey40", alpha = 0.8)
resHARV_001_df_long %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab1[1], xmax = ab1[2]),
color = "darkgray", fill = "grey40", alpha = 0.5) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab2[1], xmax = ab2[2]),
color = "darkgray", fill = "grey40", alpha = 0.5) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
resHARV_001_df_long %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab1[1], xmax = ab1[2]),
color = "darkgray", fill = "gray", alpha = 0.5) +
geom_rect(mapping = aes(ymin = min(resHARV_001_df_long$Reflectance),
ymax = max(resHARV_001_df_long$Reflectance),
xmin = ab2[1], xmax = ab2[2]),
color = "darkgray", fill = "gray", alpha = 0.5) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
# Duplicate the spectral signatures into a new data.frame
resHARV_001_df_long_mask <- resHARV_001_df_long
# Mask out all values within each of the two atmospheric absorbtion bands
resHARV_001_df_long_mask[resHARV_001_df_long_mask$WL >
ab1[1] & resHARV_001_df_long_mask$WL < ab1[2], ]$Reflectance <- NA
resHARV_001_df_long_mask[resHARV_001_df_long_mask$WL >
ab2[1] & resHARV_001_df_long_mask$WL < ab2[2], ]$Reflectance <- NA
head(resHARV_001_df_long_mask)
resHARV_001_df_long_mask %>%
drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra"))
resHARV_001_df_long_mask %>%
#drop_na() %>%
#filter(scientificName == "Acer rubrum L.") %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra"))
resHARV_001_df_long_mask %>%
ggplot() +
geom_line(aes(x = WL, y = Reflectance, color = scientificName)) +
scale_color_viridis_d(option = "A",
labels = c("Acer rubrum", "Betula lenta", "Pinus strobus", "Quercus rubra")) +
xlab("Wavelength (nm)") +
ylab("Reflectance") +
theme_nice()
# close the H5 file
H5close()
# close the H5 file
H5close()
rm(list = ls())
harv_ndvi <- raster("Data/NEON/DP3.30006.001/HARV_plot_001_NDVI.tif")
plot(harv_ndvi)
# Computes Shannon's diversity index (H') on different classes of numeric matrices using a moving window algorithm.
HARV_shannon <- Shannon(harv_ndvi, window = 5, np = 2)
# Computes Shannon's diversity index (H') on different classes of numeric matrices using a moving window algorithm.
HARV_shannon <- rasterdiv::Shannon(harv_ndvi, window = 5, np = 2)
library(doParallel)
# Computes Shannon's diversity index (H') on different classes of numeric matrices using a moving window algorithm.
HARV_shannon <- rasterdiv::Shannon(harv_ndvi, window = 5, np = 2)
?rasterdiv::Shannon
rasterdiv::Shannon(x = harv_ndvi,
window = 5)
# Computes Shannon's diversity index (H') on different classes of numeric matrices using a moving window algorithm.
HARV_shannon <- rasterdiv::Shannon(x = harv_ndvi,
window = 5,
np = 10
)
plot(HARV_shannon)
# Computes Hill's index of diversity (Hill numbers) on different classes of numeric matrices using a moving window algorithm.
HARV_hill <- rasterdiv::Hill(harv_ndvi, alpha = 1, window = 5, np = 10, rasterOut = TRUE)
plot(HARV_hill[[1]])
cor.test(values(HARV_shannon), values(HARV_hill[[1]]))
