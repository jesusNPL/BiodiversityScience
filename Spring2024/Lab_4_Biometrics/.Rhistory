#| eval: false
packages <- c("picante", "neonUtilities", "car", "phytools",
"vegan", "devtools", "magrittr", "corrplot")
# Package vector names
#| eval: false
sapply(packages, require, character.only = TRUE)
library(V.PhyloMaker)
library(tidyverse)
#| eval: false
# Set global option to NOT convert all character variables to factors
options(stringsAsFactors = FALSE)
NEON_data <- loadByProduct(dpID = "DP1.10058.001",
site = c("HARV", "CPER", "ABBY"),
package = "expanded", check.size = TRUE)
#| eval: false
packages <- c("picante", "neonUtilities", "car", "phytools",
"vegan", "devtools", "magrittr", "corrplot")
# Package vector names
#| eval: false
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
#| eval: false
if ( ! ("V.PhyloMaker" %in% installed.packages())) {remotes::install_github("jinyizju/V.PhyloMaker")}
#| eval: false
sapply(packages, require, character.only = TRUE)
library(V.PhyloMaker)
library(tidyverse)
#| eval: false
# Set global option to NOT convert all character variables to factors
options(stringsAsFactors = FALSE)
NEON_data <- loadByProduct(dpID = "DP1.10058.001",
site = c("HARV", "CPER", "ABBY"),
package = "expanded", check.size = TRUE)
# type "y" (with no quotes) in your console to start downloading the data from NEON
#| eval: false
sel <- NEON_data$div_1m2Data %>%
select(namedLocation, domainID, siteID, plotType, plotID, subplotID, endDate,
taxonID, taxonRank, family, scientificName, nativeStatusCode,
percentCover, heightPlantSpecies)
unique(sel$namedLocation)
unique(sel$siteID)
unique(sel$endDate)
#| eval: false
sel <- sel %>%
drop_na(scientificName) %>% # Removing NAs in the column of species
mutate(Date = endDate) %>%
separate(endDate, sep = "-", into = c("Year", "Month", "Day"))
unique(sel$Year)
unique(sel$siteID)
#| eval: false
HARV <- sel %>%
filter(siteID == "HARV" & Year == 2022)
unique(HARV$Year)
unique(HARV$siteID)
head(HARV)
#| eval: false
glimpse(HARV)
#| eval: false
# vector with scientific names
spp <- HARV %>%
select(scientificName) %>%
distinct()
# print the species names
spp
# save names and open with excel or numbers
write_csv(spp,
file = "data/HARV_spp_names_2020.csv")
#| eval: false
spp_check <- read_csv("data/tnrs_result.csv")
View(spp_check)
taxonomy <- spp_check %>%
select(Name_submitted, Accepted_family, Genus_matched, Specific_epithet_matched) %>%
mutate(Specific_epithet_matched = if_else(is.na(Specific_epithet_matched), "sp.", Specific_epithet_matched)) %>%
mutate(species = paste(Genus_matched, Specific_epithet_matched)) %>%
rename(genus = Genus_matched) %>%
drop_na(Accepted_family, genus)
View(taxonomy)
#| eval: false
taxonomy <- spp_check %>%
select(Name_submitted, Accepted_family, Genus_matched, Specific_epithet_matched) %>%
mutate(Specific_epithet_matched = if_else(is.na(Specific_epithet_matched), "sp.", Specific_epithet_matched)) %>%
mutate(species = paste(Genus_matched, Specific_epithet_matched)) %>%
rename(genus = Genus_matched) %>%
drop_na(Accepted_family, genus)
taxonomy$Name_submitted[4] <- "Tsuga canadensis (L.) Carrière"
taxonomy$Name_submitted[16] <- "Ilex mucronata (L.) Powell, Savolainen & Andrews"
taxonomy$Name_submitted[55] <- "Lysimachia terrestris (L.) Britton, Sterns & Poggenb."
taxonomy$Name_submitted[77] <- "Lycopodium hickeyi W.H. Wagner, Beitel & Moran"
#| eval: false
HARV_data <- full_join(HARV, taxonomy, by = c("scientificName" = "Name_submitted"))
#| eval: false
HARV_data <- HARV_data %>%
select(siteID, plotID, subplotID, family, genus, species, percentCover) %>%
drop_na(species)
head(HARV_data)
#| eval: false
HARV_CDM <- HARV_data %>%
mutate(sciname = gsub(" ", "_", species)) %>%
select(plotID, percentCover, sciname) %>%
sample2matrix(.)
#HARV_mat <- sample2matrix(HARV_data[, c(2, 7, 6)])
nrow(HARV_CDM)
ncol(HARV_CDM)
#| eval: false
# Prepare the taxonomy data to extract the phylogeny
sppPhylo <- HARV_data %>%
distinct(family, genus, species) %>% # identify unique values
select(species, genus, family)  # select columns
sppPhylo
#| eval: false
result <- V.PhyloMaker::phylo.maker(sppPhylo,
scenarios = "S3") # this will take some time.
phylo <- multi2di(result$scenario.3)
# Check if our phylogeny is ultrametric
is.ultrametric(phylo)
# Check is our phylogeny is bifurcated
is.binary.phylo(phylo)
plot(phylo, show.tip.label = FALSE)
#| eval: false
matched <- picante::match.phylo.comm(phy = phylo, comm = HARV_CDM)
matched$phy
matched$comm
#| eval: false
matched$comm[1:10, 1:10]
#| eval: false
plot(matched$phy, show.tip.label = FALSE, type = "fan")
#| eval: false
HARV_tax <- data.frame(S = specnumber(matched$comm))
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(H = diversity(matched$comm,
index = "shannon")
)
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(D = diversity(matched$comm,
index = "simpson")
)
HARV_tax
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(J = H/log(S)
)
HARV_tax
#| eval: false
sum(matched$phy$edge.length) #  sum of the total branch lengths in the community
#| eval: false
# Select species that are only present in the plot HARV_001
HARV_001 <- matched$comm %>%
filter(rownames(.) == "HARV_001") %>%
t() %>%
data.frame() %>%
filter(HARV_001 > 0)
# Drop species in the phylogeny that are not present in the plot HARV_001
HARV_001_phy <- drop.tip(matched$phy, setdiff(matched$phy$tip.label, rownames(HARV_001)))
sum(HARV_001_phy$edge.length)
#| eval: false
HARV_PD <- pd(samp = matched$comm,
tree = matched$phy,
include.root = FALSE) # Faith's PD
head(HARV_PD)
#| eval: false
HARV_PD %>%
ggplot(aes(x = SR, y = PD)) +
geom_point(size = 3, color = "darkgray")
#| eval: false
HARV_PD %$%
cor.test(SR, PD, use = "complete.obs")
#| eval: false
# Aux function for visualization
theme_biosci <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 12))
}
# plot
HARV_PD %>%
ggplot(aes(x = SR, y = PD)) +
geom_point(size = 3, color = "darkgray") +
labs(x = "Species richness", y = "PD (millions of years)") +
theme_biosci()
#| eval: false
# MPD
dist.trMB <- cophenetic(HARV_001_phy)
dist.trMB <- dist.trMB[lower.tri(dist.trMB, diag = FALSE)]
mean(dist.trMB)
#| eval: false
# MNTD
dist.trMB2 <- cophenetic(HARV_001_phy)
diag(dist.trMB2) <- NA
apply(dist.trMB2, 2, min, na.rm = TRUE)
mean(apply(dist.trMB2, 2, min, na.rm = TRUE))
#| eval: false
# MPD
HARV_MPD <- mpd(matched$comm, cophenetic(matched$phy))
head(HARV_MPD)
#| eval: false
# MNTD
HARV_MNTD <- mntd(matched$comm, cophenetic(matched$phy))
head(HARV_MNTD)
?full_join
getwd()
rm(list = ls())
ls()
#| eval: false
packages <- c("picante", "neonUtilities", "car", "phytools",
"vegan", "devtools", "magrittr", "corrplot")
# Package vector names
#| eval: false
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
#| eval: false
if ( ! ("V.PhyloMaker" %in% installed.packages())) {remotes::install_github("jinyizju/V.PhyloMaker")}
#| eval: false
sapply(packages, require, character.only = TRUE)
library(V.PhyloMaker)
library(tidyverse)
#| eval: false
# Set global option to NOT convert all character variables to factors
options(stringsAsFactors = FALSE)
NEON_data <- loadByProduct(dpID = "DP1.10058.001",
site = c("HARV", "CPER", "ABBY"),
package = "expanded",
check.size = TRUE)
# type "y" (with no quotes) in your console to start downloading the data from NEON
View(NEON_data$div_10m2Data100m2Data)
#| eval: false
sel <- NEON_data$div_1m2Data %>%
select(namedLocation, domainID, siteID, plotType, plotID, subplotID, endDate,
taxonID, taxonRank, family, scientificName, nativeStatusCode,
percentCover, heightPlantSpecies)
unique(sel$namedLocation)
unique(sel$siteID)
unique(sel$endDate)
#| eval: false
sel <- sel %>%
drop_na(scientificName) %>% # Removing NAs in the column of species
mutate(Date = endDate) %>%
separate(endDate, sep = "-",
into = c("Year", "Month", "Day"))
unique(sel$Year)
unique(sel$siteID)
#| eval: false
HARV <- sel %>%
filter(siteID == "HARV" & Year == 2022)
unique(HARV$Year)
unique(HARV$siteID)
head(HARV)
#| eval: false
glimpse(HARV)
#| eval: false
HARV <- sel %>%
filter(siteID == "HARV" & Year == 2022)
unique(HARV$Year)
unique(HARV$siteID)
head(HARV)
#| eval: false
spp_check <- read_csv("data/tnrs_result.csv")
View(spp_check)
#| eval: false
HARV_data <- full_join(x = HARV, y = taxonomy,
by = c("scientificName" = "Name_submitted"))
#| eval: false
taxonomy <- spp_check %>%
select(Name_submitted, Accepted_family, Genus_matched, Specific_epithet_matched) %>%
mutate(Specific_epithet_matched = if_else(is.na(Specific_epithet_matched), "sp.", Specific_epithet_matched)) %>%
mutate(species = paste(Genus_matched, Specific_epithet_matched)) %>%
rename(genus = Genus_matched) %>%
drop_na(Accepted_family, genus)
taxonomy$Name_submitted[4] <- "Tsuga canadensis (L.) Carrière"
taxonomy$Name_submitted[16] <- "Ilex mucronata (L.) Powell, Savolainen & Andrews"
taxonomy$Name_submitted[55] <- "Lysimachia terrestris (L.) Britton, Sterns & Poggenb."
taxonomy$Name_submitted[77] <- "Lycopodium hickeyi W.H. Wagner, Beitel & Moran"
#| eval: false
HARV_data <- full_join(x = HARV, y = taxonomy,
by = c("scientificName" = "Name_submitted"))
#| eval: false
HARV_data <- HARV_data %>%
select(siteID, plotID, subplotID, family, genus, species, percentCover) %>%
drop_na(species)
head(HARV_data)
#| eval: false
HARV_CDM <- HARV_data %>%
mutate(sciname = gsub(" ", "_", species)) %>%
select(plotID, percentCover, sciname) %>%
sample2matrix(.)
#HARV_mat <- sample2matrix(HARV_data[, c(2, 7, 6)])
nrow(HARV_CDM)
ncol(HARV_CDM)
#| eval: false
# Prepare the taxonomy data to extract the phylogeny
sppPhylo <- HARV_data %>%
distinct(family, genus, species) %>% # identify unique values
select(species, genus, family)  # select columns
sppPhylo
#| eval: false
result <- V.PhyloMaker::phylo.maker(sppPhylo,
scenarios = "S3") # this will take some time.
phylo <- multi2di(result$scenario.3)
# Check if our phylogeny is ultrametric
is.ultrametric(phylo)
# Check is our phylogeny is bifurcated
is.binary.phylo(phylo)
plot(phylo, show.tip.label = FALSE)
#| eval: false
matched <- picante::match.phylo.comm(phy = phylo,
comm = HARV_CDM)
matched$phy
matched$comm
#| eval: false
plot(matched$phy,
show.tip.label = FALSE,
type = "fan")
#| eval: false
HARV_tax <- data.frame(S = specnumber(matched$comm))
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(H = diversity(matched$comm,
index = "shannon")
)
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(D = diversity(matched$comm,
index = "simpson")
)
HARV_tax
#| eval: false
HARV_tax <- HARV_tax %>%
mutate(J = H/log(S)
)
HARV_tax
HARV <- sel %>%
filter(siteID == "HARV")
View(HARV)
