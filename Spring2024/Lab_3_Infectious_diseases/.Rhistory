#| eval: false
library(tidyverse)
library(lubridate)
library(coronavirus)
library(PrettyCols)
library(scales)
library(deSolve)
#| eval: false
data("coronavirus")
glimpse(coronavirus)
unique(coronavirus)
unique(coronavirus$date)
tail(unique(coronavirus$date))
refresh_coronavirus_jhu()
save(coronavirus, file = "data/coronavirus.RData")
#| eval: false
githubURL <- "https://github.com/jesusNPL/BiodiversityScience/blob/master/Spring2024/Lab_3_Infectious_diseases/data/coronavirus.RData"
load(url(githubURL))
#| eval: false
githubURL <- "https://github.com/jesusNPL/BiodiversityScience/raw/master/Spring2024/Lab_3_Infectious_diseases/data/coronavirus.RData"
load(url(githubURL))
glimpse(corona)
#| eval: false
library(tidyverse)
library(lubridate)
library(coronavirus)
library(PrettyCols)
library(scales)
library(deSolve)
#| eval: false
githubURL <- "https://github.com/jesusNPL/BiodiversityScience/raw/master/Spring2024/Lab_3_Infectious_diseases/data/coronavirus.RData"
load(url(githubURL))
glimpse(corona)
#| eval: false
githubURL <- "https://github.com/jesusNPL/BiodiversityScience/raw/master/Spring2024/Lab_3_Infectious_diseases/data/coronavirus.RData"
load(url(githubURL))
glimpse(coronavirus)
#| eval: false
# Get top confirmed cases by country
coronavirus %>%
filter(data_type == "cases_new") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(location), x = total)) +
geom_bar(stat = "identity")
View(coronavirus)
unique(coronavirus$type)
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(location) %>%
summarise(total = sum(value)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(location), x = total)) +
geom_bar(stat = "identity")
coronavirus
head(coronavirus)
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(country), x = total)) +
geom_bar(stat = "identity")
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
#arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(country), x = total)) +
geom_bar(stat = "identity")
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(country), x = total)) +
geom_bar(stat = "identity")
# Aux function for visualization
theme_nice <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 20),
legend.text = element_text(size = 15))
}
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(country), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M", scale = 1e-6)) +
labs(x = "Number of cases", y = "Countries with more reported cases") +
theme_nice()
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 25),
legend.text = element_text(size = 20))
# Aux function for visualization
theme_nice <- function() {
theme_bw() + #base_family = "Noto Sans") +
theme(panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA),
#plot.title = element_text(face = "bold"),
#strip.text = element_text(face = "bold"),
strip.background = element_rect(fill = "grey80", color = NA),
legend.title = element_text(face = "bold", size = 25),
legend.text = element_text(size = 20))
}
# Get top confirmed cases by country
coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = as.factor(country), x = total)) +
geom_bar(stat = "identity", alpha = 0.7) +
scale_x_continuous(labels = scales::label_number(suffix = " M",
scale = 1e-6)) +
labs(x = "Number of cases",
y = "Countries with more reported cases") +
theme_nice()
coronavirus_us <- coronavirus %>%
filter(country == "US") %>%
arrange(desc(date)) # sort the data according dates
View(coronavirus_us)
coronavirus_us
infected_us <- coronavirus %>%
filter(location == "US") %>%
arrange(desc(date)) %>%
filter(data_type == "confirmed")
