## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2024/Lab_1_Intro_PCM/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
library(tidyverse)
library(ape)
library(geiger)
library(geiger)
library(nlme)
library(phytools)
library(rr2)
## Trait data
furnaData <- read_csv("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2024/Lab_1_Intro_PCM/Data/furnariides_traits.csv") %>%
column_to_rownames("Sciname") %>%   # we are using the column "Sciname" as rownames
drop_na(Range.Size)
## Phylogenetic data
furnaTree <- read.nexus("https://raw.githubusercontent.com/jesusNPL/BiodiversityScience/master/Spring2024/Lab_1_Intro_PCM/Data/furnariides_tree.nex")
getwd()
#| eval: false
main.dir <- getwd() # Will get the working directory
urls <- "https://www.dropbox.com/scl/fi/3vr6yi0y32c36u5rgqlyp/Lab_1.zip?rlkey=s136jvkwsi6979hb5tlosxqh5&dl=1" # Name of the file to download
download.file(url = urls, file.path(main.dir, "Lab_1.zip"), mode = "wb") # download the file in a specific folder
glimpse(furnaData)
furnaData
tmp <- name.check(phy = furnaTree, data = furnaData)
tmp
furnaTree <- drop.tip(phy = furnaTree, tip = tmp$tree_not_data)
name.check(phy = furnaTree, data = furnaData)
plot(furnaTree)
plot.phylo(furnaTree, no.margin = TRUE, cex = 0.5)
plot.phylo(furnaTree,
type = "fan",
no.margin = TRUE,
cex = 0.3)
furnaTree
str(furnaTree)
furnaTree$tip.label
furnaTree$Nnode
furnaTree$edge
plot.phylo(furnaTree, type = "fan", no.margin = TRUE, cex = 0.7, label.offset = 0.1)
nodelabels(cex = 0.5)
tiplabels(cex = 0.5)
plot.phylo(furnaTree,
type = "fan",
no.margin = TRUE,
cex = 0.7,
label.offset = 0.1)
nodelabels(cex = 0.5)
tiplabels(cex = 0.5)
plot.phylo(furnaTree,
type = "fan",
no.margin = TRUE,
cex = 0.7,
label.offset = 0.1,
show.tip.label = FALSE)
nodelabels(cex = 0.5)
tiplabels(cex = 0.5)
furnaData
hwi <- furnaData %>%
select(`Hand-Wing.Index`)
View(hwi)
hist(hwi)
hist(hwi$`Hand-Wing.Index`)
hwi <- furnaData[, "Hand-Wing.Index"]
names(hwi) <- rownames(furnaData)
hwi
hist(hwi)
#| eval: false
brownianModel <- fitContinuous(furnaTree, hwi)
brownianModel # this will show you the fit statistics and parameter values
contMap(furnaTree, hwi, fsize = 0.5, lwd = 3)
?contMap
contMap(furnaTree,
hwi,
fsize = 0.1,
lwd = 3,
type = "fan")
obj <- contMap(furnaTree,
hwi,
fsize = 0.1,
lwd = 3,
#type = "fan",
plot = FALSE)
# change colors
obj <- setMap(obj,
c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C"))
# Plot the results
plot(obj,
fsize = c(0.7, 0.8),
leg.txt = "HWI")
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "HWI")
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "Hand-Wing Index")
?setMap
## Calculate number of trait shifts
obj <- contMap(furnaTree,
hwi,
fsize = 0.1,
lwd = 2,
#type = "fan",
plot = FALSE)
## Calculate number of trait shifts
obj <- contMap(furnaTree,
hwi,
fsize = 0.1,
lwd = 2,
type = "fan",
plot = FALSE)
# change colors
obj <- setMap(obj,
c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C"))
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "Hand-Wing Index")
obj
summary(obj)
obj$cols
obj$tree$mapped.edge
furnariidae <- furnaData %>%
filter(Family3 == "Furnariidae")
furnariidae
furnariidaeData <- furnaData %>%
filter(Family3 == "Furnariidae")
?drop.tip
furnariidaeTree <- drop.tip(phy = furnaTree,
tip = setdiff(furnaTree$tip.label, rownames(furnariidaeData)))
furnariidaeTree
hwi <- furnariidaeData[, "Hand-Wing.Index"]
names(hwi) <- rownames(furnariidaeData)
hist(hwi)
brownianModel <- fitContinuous(furnariidaeTree, hwi)
brownianModel # this will show you the fit statistics and parameter values
## Calculate number of trait shifts
obj <- contMap(furnariidaeTree,
hwi,
fsize = 0.1,
lwd = 2,
type = "fan",
plot = FALSE)
# change colors
obj <- setMap(obj,
c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C"))
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "Hand-Wing Index")
#| eval: false
rangeSize <- furnariidaeData[, "Range.Size"]
names(rangeSize) <- rownames(furnariidaeData)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
hist(rangeSize)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = `Hand-Wing.Index`, y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
?fitContinuous
brownianModel <- fitContinuous(phy = furnariidaeTree,
dat = log(hwi))
brownianModel # this will show you the fit statistics and parameter values
## Calculate number of trait shifts
obj <- contMap(furnariidaeTree,
log(hwi),
fsize = 0.1,
lwd = 2,
type = "fan",
plot = FALSE)
# change colors
obj <- setMap(obj,
c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C"))
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "Hand-Wing Index")
hist(log(rangeSize))
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)")
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Hand-Wing Index)", y = "log(Range Size)")
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray", size = 3) +
labs(x = "log(Hand-Wing Index)", y = "log(Range Size)")
#| eval: false
lm_hwi_rangesize <- lm(log(rangeSize) ~ log(hwi))
summary(lm_hwi_rangesize)
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
geom_smooth(method = "lm")
pglsModel <- gls(log(rangeSize) ~ log(hwi),
correlation = corBrownian(phy = furnariidesTree,
form=~names(rangeSize)),
method = "ML")
pglsModel <- gls(log(rangeSize) ~ log(hwi),
correlation = corBrownian(phy = furnariidaeTree,
form=~names(rangeSize)),
method = "ML")
pglsModel
pglsModel
#| eval: false
summary(pglsModel)
coef(pglsModel)
R2(pglsModel)
#| eval: false
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
#geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
?rr2
R2_lik(pglsModel)
R2_lik(pglsModel)
#| eval: false
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "Hand-Wing Index", y = "log(Range Size)") +
#geom_smooth(method = "lm") +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
R2_lik(mod = pglsModel,
mod.r = lm_hwi_rangesize)
summary(lm_hwi_rangesize))
summary(lm_hwi_rangesize)
R2_lik(mod = pglsModel)
#| eval: false
brownianModel <- fitContinuous(furnariidaeTree, hwi)
#| eval: false
OUModel <- fitContinuous(furnariidaeTree, hwi, model = "OU")
EBModel <- fitContinuous(furnariidaeTree, hwi, model = "EB")
brownianModel
OUModel
EBModel
aicw(c(brownianModel$opt$aicc, OUModel$opt$aicc, EBModel$opt$aicc))
furnaData %>%
drop_na(Range.Size) %>%
ggplot(aes(x = log(`Hand-Wing.Index`), y = log(Range.Size))) +
geom_point(alpha = 0.5, color = "darkgray") +
labs(x = "log(Hand-Wing Index)", y = "log(Range Size)") +
geom_smooth(method = "lm", se = FALSE) +
geom_abline(intercept = coef(pglsModel)[1], slope = coef(pglsModel)[2],
color = "red", linewidth = 1.5)
rshwi.sum <- summary(lm_hwi_rangesize)
#for the uncorrected linear model
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for Brownian Motion, the 95% CI
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
#for the uncorrected linear model
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for Brownian Motion, the 95% CI
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
#for the uncorrected linear model
rshwi.sum$coef[2, 1] + c(-1.96, 1.96)*rshwi.sum$coef[2, 2]
#for Brownian Motion, the 95% CI
coef(pglsModel)[2] + c(-1.96, 1.96)*sqrt(pglsModel$varBeta[2, 2])
pglsModel)[2]
coef(pglsModel)[2]
(pglsModel$varBeta[2, 2]
)
#| eval: false
K_hwi <- phylosig(tree = furnariidaeTree, # Phylogeny
x = hwi, # trait
method = "K", # method
test = TRUE)
print(K_hwi)
plot(K_hwi)
#| eval: false
LB_hwi <- phylosig(tree = furnaTree,
x = hwi,
method = "lambda",
test = TRUE)
print(LB_hwi)
plot(LB_hwi)
unique(furnaData$Family3)
glimpse(furnaData)
