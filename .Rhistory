dir()
data <- factor(c("small", "medium", "tall"))
is.factor(data)
data
?matrix
data2 <- matrix(1:12, nrow = 3)
data2
rownames(dta2) <-  LETTERS[1:3]
rownames(data2) <-  LETTERS[1:3]
data
data2
data2 <- matrix(1:60, nrow = 3)
rownames(data2) <-  LETTERS[1:3]
data2
data2 <- matrix(1:30, nrow = 3)
data2
data2 <- matrix(1:30, nrow = 10)
data2
rownames(data2) <-  LETTERS[1:3]
rownames(data2) <-  LETTERS[1:10]
data2
colnames(data2) <- c("Sample01", "Sample02", "Sample03")
data2
data2[, 1]
data2[1, ]
head(data2)
data2 <- matrix(1:50, nrow = 10)
data2
data2 <- matrix(1:50, nrow = 15)
data2 <- matrix(1:50, nrow = 20)
data2 <- matrix(1:45, nrow = 15)
data2
?data.frame
assemblage <- data.frame(species = c("rufus", "cristatus", "albogularis", "paraguayae"), habitat = factor(c("forest", "savanna", "urban", "transition")), high = c(1.1, 0.8, 0.9, 1), distance = c(1, 1.7, 0.6, 0.2))
assemblage
?list
df <- data.frame(species = c("rufus", "cristatus", "albogularis", "paraguayae"), habitat = factor(c("forest", "savanna", "urban", "transition")), high = c(10, 2, 7, 4), distance = c(3, 9, 5, 6))
matx <- matrix(1:50, nrow = 15)
matx <- matrix(1:45, nrow = 15)
lst <- list(data, df, matx)
lst
lst[[1]]
lst[[2]]
lst[[3]]
?saveRDS
?install.packages
?require
seq_test <- seq(from = 1, to = 20, by = 2) # Here is a sequence of numbers from 1 to 20, every two numbers
x = seq(10, 30) # This is a sequence from 10 to 30. What is the difference with the previous numeric vector?
df.kernel()
df
df[,1]
df[,2]
df[, 3]
df[3, ]
df[3, 3]
x*seq_test
b <- c(1, 2, 3, 4, 5)
b[1]
b[4]*seq_test[10]
b[4]
seq_test[10]
19*4
b[4]+seq_test[10]
seq_test[5]^df[3, 3]
df[3,3]
seq_test[5]/df[3, 3]
matx[1]
matx[1,]
matx[,1]
matx[,1][,4]
matx[,1:4]
matx[4,]
matx[4,][,1]
matx[4,][1]
matx[4,][3]
View(matx)
matx[4,][3]*df[4, 4]
matx[4,][3]-df[4, 4]
b
df
matx[4,][3]
matx[4,]
matx[, 4,]
matx[, 4]
matx[, 3]
matx[, 3][4]-df[4, 4]
matx[, 3][4]
df[4, 4]
mean(seq_test)
seq_test^7
seq_test*7
seq_test+7
log(seq_test)
cor(matx)
matx[, 1]
matx[, 2]
cor(matx[, 1], matx[, 2])
sqrt(seq_test)
dat <- read.table("Data/Sample.txt")
head()
head(dat)
dat2 <- read.table("Data/Sample.txt", row.names = 1, header = TRUE)
head(dat2)
dat3 <- read.csv("Data/Sample.csv")
head(dat3)
class(dat)
dat4 <- as.matrix(read.csv("Data/Sample.csv", row.names = 1, header = TRUE))
View(dat4)
class(dat4)
head(dat4)
head(dat4, 10)
dat4[1:9, 1:20]
dat4[1:20, 1:9]
dat3Sample <- dat3[1:4, 1:50]
dat3Sample <- dat3[1:50, 1:4]
dim(dat3Sample)
dat3Sample
dat4 <- na.omit(as.matrix(read.csv("Data/Sample.csv", row.names = 1, header = TRUE)))
head(dat4, 10)
?file.choose
dat5 <- read.csv(file.choose())
?write.csv
is.na(dat3Sample)
matx[, 1]
matx[1, ]
head(matx)
require(ape)
```{r, warnings = FALSE, message = FALSE}
require(ape)
## Here we will create a phylogenetic tree in Newick format
newick_tree <- "((A:10,B:9)D:5,C:15)F;"
## Read the tre
tree <- read.tree(text = newick_tree)
## And now we can plot the phylogentic tree
plot(tree, show.node.label = TRUE)
## First create a Nexus file in the working directory
cat(
"#NEXUS
BEGIN TAXA;
DIMENSIONS NTAXA=3;
TaxLabels A B C;
END;
BEGIN TREES;
TREE=((A:10,B:9)D:5,C:15)F;
END;",
file = "Data/Nexus_tree.nex"
)
## Now read the phylogenetic tree, but look that instead of using read.tree we are using read.nexus
nexus_tree <- read.nexus("Data/Nexus_tree.nex")
## Plotamos a árvore
plot(nexus_tree, show.node.label = TRUE)
tree
tree$edge
# Simulate 10 phylogenies, each one with 5 species
multitree <- replicate(10, rcoal(5), simplify = FALSE)
# Store the list of trees as a multiPhylo object
class(multitree) <- "multiPhylo"
# Plot a single tree from the 10
plot(multitree[[1]])
# exportando as filogenias num único arquivo Newick.
write.tree(phy = multitree, file = "Data/multitree_example.txt")
multitree_example <- read.tree("Data/multitree_example.txt")
multitree
getwd()
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
getwd()
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
setwd("Your path or directory")
help("logarithm")
?log
??log
help("log")
?log
??log
a <- 10
b <- c(1, 2, 3, 4, 5)
seq_test <- seq(from = 1, to = 20, by = 2) # Here is a sequence of numbers from 1 to 20, every two numbers
x = seq(10, 30) # This is a sequence from 10 to 30. What is the difference with the previous numeric vector?
sample(seq_test, 2, replace = T) # Sort two numbers within the object seq_test
rep_test <- rep(1:2, c(10, 3)) # Repeat the number one, ten times and the number 2, three times
ex <- c(1:10) # Create a sequence of 1 to 10
length(ex) # Lenght of the object example
aa <- length(ex) # What we are doing in here?
str(seq_test) # Look at the structure of the data
research_groups <- c(Jeannine = "Oaks", Jesus = "Furnariides", Kirsten = "Fossils")
research_groups
str(research_groups)
is.factor(ex) # It is a factor? (FALSE)
is.matrix(ex) # It is a matrix? (FALSE)
is.vector(ex) # It is a vector? (TRUE)
a < 1   # 'a' is lower than 1? (FALSE)
a == 1   # 'a' is equal to 1? (TRUE)
a >= 1   # 'a' is higher or equal to 1? (TRUE)
a != 2   # the object 'a' is different of two? (TRUE) (!= negation)
## Now read the phylogenetic tree, but look that instead of using read.tree we are using read.nexus
nexus_tree <- read.nexus("Data/Nexus_tree.nex")
## lets plot the example
plot(nexus_tree, show.node.label = TRUE)
srt(nexus_tree)
str(nexus_tree)
require(ape)
# Simulate 10 phylogenies, each one with 5 species
multitree <- replicate(10, rcoal(5), simplify = FALSE)
# Store the list of trees as a multiPhylo object
class(multitree) <- "multiPhylo"
# Plot a single tree from the 10
plot(multitree[[10]])
par(mfrow = c(2, 2))
plot(multitree[1:4])
par(mfrow = c(2, 2))
plot(multitree[[1]])
plot(multitree[[3]])
plot(multitree[[7]])
plot(multitree[[10]])
par(mfrow = c(2, 2))
plot(multitree[[1]])
plot(multitree[[3]])
plot(multitree[[7]])
plot(multitree[[10]])
?for
help("for") {
})
help("for")
a <- 10
b <- c(1, 2, 3, 4, 5)
seq_test <- seq(from = 1, to = 20, by = 2) # Here is a sequence of numbers from 1 to 20, every two numbers
x = seq(10, 30) # This is a sequence from 10 to 30. What is the difference with the previous numeric vector?
sample(seq_test, 2, replace = T) # Sort two numbers within the object seq_test
rep_test <- rep(1:2, c(10, 3)) # Repeat the number one, ten times and the number 2, three times
ex <- c(1:10) # Create a sequence of 1 to 10
length(ex) # Lenght of the object example
aa <- length(ex) # What we are doing in here?
str(seq_test) # Look at the structure of the data
for(i in 1:25)
for (i in 1:10){
cat(i, sep = '');
}
for (i in 1:10){
cat(i, sep = ',');
}
for (i in 1:10){
cat(i, sep = '\n');
}
for (i in 1:10){
cat(i, sep = '')
}
for (i in 1:10){
cat(i, sep = '\n')
}
for (i in 5:10){
cat(i, sep = '')
}
for (i in 5:10){
cat(i, sep = '')
cat(i, sep = '\n')
}
for (i in 5:10){
cat(i, sep = '')*cat(i, sep = '\n')
}
for (i in 5:10){
cat(i, sep = '')+cat(i, sep = '\n')
}
for (i in b){
cat(i, sep = '')
}
for (i in 5:ex){
cat(i, sep = '\n')
}
5:ex
for (i in 5:lenght(ex)){
cat(i, sep = '\n')
}
for (i in 5:length(ex)){
cat(i, sep = '\n')
}
for (i in 5:length(ex)){
x2 <- x^2
}
x2
x2 <- 3
for (i in 5:length(ex)){
x2 <- x2^2
}
for (i in 1:5){
x2 <- x2^2
}
x2
x2 <- 3;
for (i in 1:5){
x2 <- x2^2;
}
x2
x <- 3;
for (i in 1:5){
x2 <- x2^2;
}
x2 <- 3;
for (i in 1:5){
x2 <- x2^2;
}
for (i in 1:5){
x2 <- x2^2;
}
for (i in 1:5){
x2 <- x2[i]^2;
}
x2
x2[i]
x2 <- 3
for (i in 1:5){
x2 <- x2^2
}
for (i in 5:length(ex)){
b2 <- b^2
}
b2
for (i in 5:length(ex)){
b2 <- b^2
b3 <- b*2
b4 <- b+10
}
b2
b3
b4
BioSciNames <- c("Jeannine", "Jesús", "Bailey", "Kalli", "Araidna", "Samantha", "Maxell",
"Sara", "Nicholas", "Carmen", "Ashley", "Mikkel", "Shana", "Kirsten",
"Lucy", "Joe", "Joshua")
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], "\n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], "very nice to neet you","\n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], ", very nice to neet you!","\n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], ", welcome to the first practice!","\n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i],", welcome to the first practice!","\n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], ", welcome to the first practice!","\");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], ", welcome to the first practice!","n");
}
for (i in 3:length(BioSciNames)){
cat("Hi,", BioSciNames[i], ", welcome to the first practice!","\n");
}
# Simulate 10 phylogenies, each one with 5 species
multitree <- replicate(10, rcoal(5), simplify = FALSE)
# Store the list of trees as a multiPhylo object
class(multitree) <- "multiPhylo"
# Plot a single tree from the 10
plot(multitree[[10]])
# Exporting the phylogenies as a single Newick file.
write.tree(phy = multitree, file = "Data/multitree_example_newick.txt")
multitree_example_newick <- read.tree("Data/multitree_example_newick.txt")
multitree_example_newick
# Exporting the phylogenies as a single Nexus file.
write.nexus(phy = multitree, file = "Data/multitree_example_nexus.nex")
multitree_example_nexus <- read.nexus("Data/multitree_example_nexus.")
# Exporting the phylogenies as a single Nexus file.
write.nexus(phy = multitree, file = "Data/multitree_example_nexus.nex")
multitree_example_nexus <- read.nexus("Data/multitree_example_nexus.nex")
multitree_example_nexus
?picante:psv
require(picante)
?psv
?mpd
?mntd
?raoD
?psv
?PD
?pd
getwd()
package.names <- c('picante', 'pez', 'car', 'vegan', 'MASS', 'ecodist', 'FD', 'adephylo', 'phytools')
if ( ! ("PACKAGE NAME" %in% installed.packages())) {install.packages("PACKAGE NAME", dependencies = T)}
library("PACKAGE NAME")
package.names <- c('ape', 'picante', 'pez', 'car', 'vegan', 'MASS', 'ecodist', 'FD', 'adephylo')
for (pkg in package.names) {
if (!require(pkg, character.only = TRUE, quietly = TRUE)) {
install.packages(pkg)
library(pkg, character.only = TRUE)
}
}
trMB <- read.tree("Data/ALLMB.tre")
#trMB$tip.label <- gsub(" ", "_", phy$tip.label)
#trMB$tip.label <- gsub("sp.", "sp", trMB$tip.label)
length(trMB$tip.label)
head(trMB$tip.label)
BBSraw <- read.csv("Data/BBSpecies.biomass.2014.csv")[2:5]
bio.dat <- BBSraw
head(bio.dat)
bio.dat$Species <- gsub(" ", "_", bio.dat$Species)
bio.dat$Plot.Year <- paste(bio.dat$Plot, bio.dat$Year, sep = ";", collapse = NULL)   #join plot and year
bio.dat <- bio.dat[, -c(1, 2)]
bio.dat <- bio.dat[, c(3, 1, 2)]
oldsp <- c("Petalostemum_purpureum", "Petalostemum_candidum", "Petalostemum_villosum",
"Taraxicum_officinalis", "Leptoloma_cognatum", "Artemisia_.caudata._campestris",
"Achillea_millefolium.lanulosa.", "Euphorbia_.supina._maculata",
"Tragopogon_dubius_.major.",
"Ambrosia_artemisiifolia_elatior","Andropogon_gerardii", "Erigeron_canadensis")
newsp <- c("Dalea_purpurea", "Dalea_candida", "Dalea_pulchra",
"Taraxacum_croceum", "Digitaria_ciliaris", "Artemisia_caudata",
"Achillea_millefolium", "Euphorbia_supina", "Tragopogon_dubius",
"Ambrosia_artemisiifolia", "Andropogon_gerardii", "Erigeron_canadense")
for(i in 1:length(oldsp)){
cat("FROM", oldsp[i], "TO", newsp[i], "\n")
bio.dat$Species <- gsub(oldsp[i], newsp[i], bio.dat$Species)
}
#Get list of species in big bio
spnames <- unique(bio.dat$Species)
trMBcom <- drop.tip(trMB, setdiff(trMB$tip.label, spnames))
setdiff(spnames, trMBcom$tip.label)
bio.dat <- data.frame(na.omit(bio.dat))
head(bio.dat)
BBScom <- data.frame(sample2matrix(bio.dat))
BBScom[1:10, 1:10]
ls() # obtain the names of objects stored in the environment
rem <- ls()
rem
#rm(list = rem[2:10])
matched <- match.phylo.comm(phy = trMBcom, comm = BBScom)
matched$comm[1:10, 1:10]
plot(matched$phy, show.tip.label = FALSE)
sum(matched$phy$edge.length) #  sum of the total branch lengths in the community
BBSpd <- pd(matched$comm, matched$phy, include.root = FALSE) # Faith's PD
head(BBSpd)
cor.test(BBSpd$SR, BBSpd$PD)
plot(BBSpd$SR, BBSpd$PD, xlab = "Species richness", ylab = "PD (millions of years)", pch = 16)
# MPD
dist.trMB <- cophenetic(matched$phy)
dist.trMB <- dist.trMB[lower.tri(dist.trMB, diag = FALSE)]
mean(dist.trMB)
# MNTD
dist.trMB2 <- cophenetic(matched$phy)
diag(dist.trMB2) <- NA
apply(dist.trMB2, 2, min, na.rm = TRUE)
mean(apply(dist.trMB2, 2, min, na.rm = TRUE))
BBSmpd <- mpd(matched$comm, cophenetic(matched$phy)) # MPD
head(BBSmpd)
BBSmntd <- mntd(matched$comm, cophenetic(matched$phy)) # MPD
head(BBSmntd)
# We can also calculate the standardized effect size of PD in each community
BBScdm <- ses.pd(matched$comm, matched$phy, runs = 99)
BBScdm <- BBScdm[, c(1, 2, 6, 7)]
head(BBScdm)
require(phytools)
# Simpsons
BBSraoD <- raoD(matched$comm, force.ultrametric(matched$phy))
BBScdm$RaoD <- BBSraoD$Dkk
# SESMPD
BBSsesmpd <- ses.mpd(matched$comm, cophenetic(matched$phy), runs = 99)
BBScdm$MPD <- BBSsesmpd[, c(2)]
BBScdm$sesMPD <- BBSsesmpd[, c(6)]
BBScdm$MPDpval <- BBSsesmpd[, c(7)]
# SESMNTD
BBSsesmntd <- ses.mntd(matched$comm, cophenetic(matched$phy), runs = 99)
BBScdm$MNTD <- BBSsesmntd[, c(2)]
BBScdm$sesMNTD <- BBSsesmntd[, c(6)]
BBScdm$MNTDpval <- BBSsesmntd[, c(7)]
# PSV or phylogenetic species variability
BBSpsv <- psv(matched$comm, matched$phy, compute.var = TRUE)
BBScdm$PSV <- BBSpsv[, 1]
# PSR or phylogenetic species richness
BBSpsr <- psr(matched$comm, matched$phy, compute.var = TRUE)
BBScdm$PSR <- BBSpsr[, 1]
# PSR or phylogenetic species evenness
BBSpse <- pse(matched$comm, matched$phy)
BBScdm$PSE <- BBSpse[, 1]
# Scheiner 2012 qD(p)
source("RFunctions/qDp.R")
BBSqDp <- qDp(matched$phy, matched$comm, q = 2)
BBScdm$qDP <-	BBSqDp
head(BBScdm, 10)
BBScdm2 <- BBScdm[, c(1, 2, 5, 6, 9, 12, 13, 14, 15)]
names(BBScdm2) <- c("SR", "PD", "RaoD", "MPD", "MNTD", "PSV", "PSR", "PSE", "qDP")
head(BBScdm2)
scatterplotMatrix(BBScdm)
cor(BBScdm)
cor.table(BBScdm)
plot(BBScdm2$MPD, BBScdm2$PSV, xlab = "MPD", ylab = "PSV", pch = 17)
BBSmds <- metaMDS(BBScdm2, trace = FALSE)
ordiplot(BBSmds, type = "t", display = "species")
require(ape)
require(phytools)
require(picante)
trMB <- read.tree("Data/ALLMB.tre")
#trMB$tip.label <- gsub(" ", "_", phy$tip.label)
#trMB$tip.label <- gsub("sp.", "sp", trMB$tip.label)
# MPD
dist.trMB <- cophenetic(matched$phy)
dist.trMB <- dist.trMB[lower.tri(dist.trMB, diag = FALSE)]
mean(dist.trMB)
