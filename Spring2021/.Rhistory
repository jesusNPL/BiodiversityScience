head(fit_90)
tail(fit_90)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_90$time, fit_90[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
# Peak of the pandemic for the first 60 days
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("time", "I")]
max(fit_incidence$I) * 0.02 # Assuming 2% of fatality rate
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
View(covid_mn)
N <- 5686649 # Total population for the State of Minnesota for the 2020
start_date <- "2020-03-06"
end_date <- "2020-05-10"
# isolating the infected subjects in the state of Minnesota
Infected <- subset(covid_mn, Date2 >= ymd(start_date) & Date2 <= ymd(end_date))$new_case
Days <- 1:length(Infected) # Number of days since the first case
plot(Days, Infected, type = "b")
plot(Days, Infected, log = "y")
abline(lm(log10(Infected) ~ Days))
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 30 days", outer = TRUE, line = -2)
init <- c(
S = N - Infected[1], # Susceptible group
I = Infected[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of infected subjects",
lwd = 2, lty = 1)
points(Days, Infected)
times <- 1:150 # time in days
fit_90 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_90)
tail(fit_90)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:120 # time in days
fit_90 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_90)
tail(fit_90)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_90$time, fit_90[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
# Peak of the pandemic for the first 60 days
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("time", "I")]
max(fit_incidence$I) * 0.02 # Assuming 2% of fatality rate
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
N <- 5686649 # Total population for the State of Minnesota for the 2020
start_date <- "2020-03-06"
end_date <- "2020-06-10"
# isolating the infected subjects in the state of Minnesota
Infected <- subset(covid_mn, Date2 >= ymd(start_date) & Date2 <= ymd(end_date))$new_case
Days <- 1:length(Infected) # Number of days since the first case
plot(Days, Infected, type = "b")
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 30 days", outer = TRUE, line = -2)
init <- c(
S = N - Infected[1], # Susceptible group
I = Infected[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of infected subjects",
lwd = 2, lty = 1)
points(Days, Infected)
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
N <- 5686649 # Total population for the State of Minnesota for the 2020
start_date <- "2020-03-06"
end_date <- "2020-05-06"
# isolating the infected subjects in the state of Minnesota
Infected <- subset(covid_mn, Date2 >= ymd(start_date) & Date2 <= ymd(end_date))$new_case
Days <- 1:length(Infected) # Number of days since the first case
plot(Days, Infected, type = "b")
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 30 days", outer = TRUE, line = -2)
init <- c(
S = N - Infected[1], # Susceptible group
I = Infected[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
N <- 5686649 # Total population for the State of Minnesota for the 2020
start_date <- "2020-03-06"
end_date <- "2020-05-10"
# isolating the infected subjects in the state of Minnesota
Infected <- subset(covid_mn, Date2 >= ymd(start_date) & Date2 <= ymd(end_date))$new_case
Days <- 1:length(Infected) # Number of days since the first case
plot(Days, Infected, type = "b")
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 30 days", outer = TRUE, line = -2)
init <- c(
S = N - Infected[1], # Susceptible group
I = Infected[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of infected subjects",
lwd = 2, lty = 1)
points(Days, Infected)
times <- 1:120 # time in days
fit_90 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_90)
tail(fit_90)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:90 # time in days
fit_90 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_90)
tail(fit_90)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_90$time, fit_90[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:150 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
matplot(fit_150$time, fit_50[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_150$time, fit_150[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
# Peak of the pandemic for the first 60 days
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("time", "I")]
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 60 days", outer = TRUE, line = -2)
install.packages("coronavirus")
packages <- c("coronavirus", "deSolve", "dplyr", "tidyr", "ggplot2", "lubridate")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
lapply(packages, library, character.only = TRUE)
corona <- refresh_coronavirus_jhu()
head(corona)
# Get top confirmed cases by country
corona_total <- coronavirus %>%
filter(type == "confirmed") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total)
# See the 20 countries with more cases
head(corona_total, 20)
corona_total %>%
head(20) %>%
ggplot(aes(y = country, x = total)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "Countries with more reported cases")
corona_total %>%
tail(20) %>%
ggplot(aes(y = country, x = total)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "Countries with less reported cases")
corona_total %>%
tail(20) %>%
ggplot(aes(y = country, x = total)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "Countries with less reported cases")
# Get the number of recovered cases
coronavirus %>%
filter(type == "recovered") %>%
group_by(country) %>%
summarise(total = sum(cases)) %>%
arrange(-total) %>%
head(20) %>%
ggplot(aes(y = country, x = total)) + # plot the top 20 countries with more recovered subjects
geom_bar(stat = "identity") +
labs(x = "Number of recovered subjects", y = "Countries with more recovered subjects")
corona_us <- subset(corona, location == "US")
head(corona_us)
corona_us <- corona_us[order(corona_us$date), ] # sort the data according dates
head(corona_us)
infected_us <- subset(corona_us, data_type == "cases_new")
deaths_us <- subset(corona_us, data_type == "deaths_new")
recovered_us <- subset(corona_us, data_type == "recovered_new")
head(infected_us)
plot(infected_us$date, infected_us$value, type = "b")
Days <- 1:nrow(infected_us)
infected_us <- data.frame(infected_us, Days)
head(infected_us)
plot(infected_us$Days, infected_us$value, type = "b",
ylab = "Infected", xlab = "Days since the first case")
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point() +
geom_smooth(method = mgcv::gam, se = TRUE)
corona_us$Days <- Days
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point() +
geom_smooth(method = mgcv::gam, se = TRUE)
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point() +
#geom_smooth(method = mgcv::gam, se = TRUE)
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point()
corona_us$Days <- Days
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point() +
geom_smooth(method = stats::loess, se = TRUE)
corona_us$Days <- Days
corona_us %>%
ggplot(aes(x = Days, y = value)) +
geom_point() +
geom_smooth(span = 0.3)
# Get data from the CDC
url_data <- "https://data.cdc.gov/api/views/9mfq-cb36/rows.csv?accessType=DOWNLOAD"
covid_us <- read.csv(url_data)
head(covid_us, 10)
covid_us %>%
head(20) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
tail(20) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
tail(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(tot_cases, state)
head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(tot_cases, state) %>%
head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(tot_cases, state) %>%
#head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(tot_cases) %>%
#head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(state) %>%
#head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(state) %>%
head(25) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us %>%
arrange(state) %>%
ggplot(aes(y = state, x = tot_cases)) +
geom_bar(stat = "identity") +
labs(x = "Number of cases", y = "States with more reported cases")
covid_us <- covid_us %>%
mutate(Date = submission_date) %>%
mutate(Date2 = mdy(Date)) %>%
separate(submission_date, sep = "/", into = c("month", "day", "year"))
# Sort the data in an increasing order
covid_us <- covid_us[order(covid_us$Date2), ]
head(covid_us)
covid_mn <- subset(covid_us, state == "MN")
head(covid_mn)
plot(1:nrow(covid_mn), covid_mn$new_case, type = "b",
ylab = "Infected Subjects", xlab = "Days since the pandemic started")
plot(1:nrow(covid_mn), covid_mn$tot_cases, type = "b",
ylab = "Total Infected Subjects", xlab = "Days since the pandemic started")
plot(1:nrow(covid_mn), abs(covid_mn$new_death), type = "b",
ylab = "Number of Deaths", xlab = "Days since the pandemic started")
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -Beta * I * S / N # Equation one
dI <- Beta * I * S / N - Gamma * I # Equation two
dR <- Gamma * I # Equation three
list(c(dS, dI, dR))
})
}
RSS <- function(parameters) {
names(parameters) <- c("Beta", "Gamma")
out <- ode(y = init, times = Days, func = SIR, parms = parameters)
# the out object includes the SIR function we wrote above
fit <- out[, 3]
sum((Infected - fit)^2)
}
plot(Days, Infected, type = "b")
N <- 5686649 # Total population for the State of Minnesota for the 2020
start_date <- "2020-03-06"
end_date <- "2020-05-10"
# isolating the infected subjects in the state of Minnesota since the start date
Infected <- subset(covid_mn, Date2 >= ymd(start_date) & Date2 <= ymd(end_date))$new_case
Days <- 1:length(Infected) # Number of days since the first case
plot(Days, Infected, type = "b")
plot(Days, Infected, log = "y")
#abline(lm(log10(Infected) ~ Days))
title("Confirmed Cases 2019-nCoV in MN, first 60 days", outer = TRUE, line = -2)
init <- c(
S = N - Infected[1], # Susceptible group
I = Infected[1], # Infected group
R = 0 # Recovered group.
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of infected subjects",
lwd = 2, lty = 1)
points(Days, Infected)
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
times <- 1:150 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_150$time, fit_150[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
