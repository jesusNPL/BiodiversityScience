# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_45)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
Opt <- optim(c(0.1, 0.1),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit)
tail(fit)
matplot(fit_100$time, fit_100[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", #log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:200 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit)
tail(fit)
matplot(fit_100$time, fit_100[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit)
tail(fit)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_100$time, fit_100[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_45)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_60)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
packages <- c("coronavirus", "deSolve", "dplyr", "tidyr", "ggplot2")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
lapply(packages, library, character.only = TRUE)
data("coronavirus")
corona <- refresh_coronavirus_jhu()
head(corona)
head(corona)
corona_us <- subset(corona, location == "US")
head(corona_us)
corona_us <- corona_us[order(corona_us$date), ] # sort the data according dates
head(corona_us)
infected_us <- subset(corona_us, data_type == "cases_new")
deaths_us <- subset(corona_us, data_type == "deaths_new")
recovered_us <- subset(corona_us, data_type == "recovered_new")
head(infected_us)
Days <- 1:nrow(infected_us)
infected_us <- data.frame(infected_us, Days)
head(infected_us)
plot(infected_us$Days, infected_us$value, type = "b",
ylab = "Infected", xlab = "Days since the first case")
SIR <- function(time, state, parameters) {
par <- as.list(c(state, parameters))
with(par, {
dS <- -Beta * I * S / N # Equation one
dI <- Beta * I * S / N - Gamma * I # Equation two
dR <- Gamma * I # Equation three
list(c(dS, dI, dR))
})
}
RSS <- function(parameters) {
names(parameters) <- c("Beta", "Gamma")
out <- ode(y = init, times = Days, func = SIR, parms = parameters)
# the out object includes the SIR function we wrote above
fit <- out[, 3]
sum((Infected - fit)^2)
}
N <- 328200000 # Total population of the United States (328.2 million)
Infected <- infected_us$value # isolating the infected subjects in the US dataset
Days <- infected_us$Days # Number of days since the first case
View(infected_us)
Infected_60 <- Infected[1:60] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
View(fit_incidence)
cor.test(fit_incidence$I, Infected_60)
plot(fit_incidence$I, Infected_60)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
View(fit_incidence)
matplot(fit_incidence$time, Infected_60,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, Infected_60,
type = "l", #log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
Infected_60 <- Infected[30:100] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Infected_60 <- Infected[40:100] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_100)
tail(fit_100)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_100$time, fit_100[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_60)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
Infected_60 <- Infected[30:90] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
Infected_60 <- Infected[20:80] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
RSS <- function(parameters) {
names(parameters) <- c("Beta", "Gamma")
out <- ode(y = init, times = Days, func = SIR, parms = parameters)
# the out object includes the SIR function we wrote above
fit <- out[, 3]
sum((Infected - fit)^2)
}
N <- 328200000 # Total population of the United States (328.2 million)
Infected <- infected_us$value # isolating the infected subjects in the US dataset
Days <- infected_us$Days # Number of days since the first case
Infected_60 <- Infected[20:80] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
Infected_60 <- Infected[1:60] # infected subjects for the first 60 Days in the US
Days <- 1:(length(Infected_60))
init <- c(
S = N - Infected_60[1], # Susceptible group
I = Infected_60[1], # Infected group
R = 0 # Recovered group
)
Opt <- optim(c(0.5, 0.5),
RSS,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(1, 1)
)
# optimize with some sensible conditions
Opt$message
# [1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"
Opt_par <- setNames(Opt$par, c("Beta", "Gamma"))
Opt_par
# get the fitted values from our SIR model
fit_incidence <- data.frame(ode(
y = init, times = Days,
func = SIR, parms = Opt_par
))
head(fit_incidence)
tail(fit_incidence)
matplot(fit_incidence$time, fit_incidence$I,
type = "l", log = "y",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1)
points(Days, Infected_60)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit)
times <- 1:150 # time in days
fit_100 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_100)
tail(fit_100)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_100$time, fit_100[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_60)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"])
Opt_par
R0 <- Opt_par["Beta"] / Opt_par["Gamma"]
R0
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
R0
R0 <- setNames(Opt_par["Beta"] / Opt_par["Gamma"], "R0")
round(R0, 3)
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("Date", "I")]
View(fit_incidence)
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("time", "I")]
times <- 1:150 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
cols <- 1:3 # colors: black = susceptible, red = infected and green = recovered
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:100 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:120 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
times <- 1:150 # time in days
fit_150 <- data.frame(ode(
y = init, times = times,
func = SIR, parms = Opt_par))
head(fit_150)
tail(fit_150)
matplot(fit_150$time, fit_150[, 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols)
legend("left", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_60)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
matplot(fit_100$time, fit_100[ , 2:4], type = "l",
xlab = "Days", ylab = "Number of subjects",
lwd = 2, lty = 1, col = cols, log = "y")
## Warning in xy.coords(x, y, xlabel, ylabel, log = log): 1 y value <= 0
## omitted from logarithmic plot
points(Days, Infected_60)
legend("bottomright", c("Susceptible", "Infected", "Recovered"),
lty = 1, lwd = 2, col = cols, inset = 0.05)
title("SIR model 2019-nCoV United States", outer = TRUE, line = -2)
# Peak of the pandemic for the first 60 days
fit_incidence[fit_incidence == max(fit_incidence), c("time", "I")]
# Peak of the pandemic for the first 60 days
fit_incidence[fit_incidence$I == max(fit_incidence$I), c("time", "I")]
max(fit_incidence$I) * 0.2
max(fit_incidence$I) * 0.02 # Assuming 2% of fatality rate
